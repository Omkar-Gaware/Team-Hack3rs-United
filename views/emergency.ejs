<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Emergency Dashboard</title>
    <style>
        :root {
            --primary: #2563eb;
            --primary-light: #3b82f6;
            --danger: #dc2626;
            --success: #16a34a;
            --background: #f1f5f9;
            --card: #ffffff;
            --text: #1e293b;
            --text-light: #64748b;
            --border: #e2e8f0;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', system-ui, sans-serif;
        }

        body {
            background: var(--background);
            color: var(--text);
            line-height: 1.5;
            padding: 2rem;
            background: url('https://wallpaperaccess.com/full/3124617.jpg') no-repeat center center fixed;
        }

        .dashboard {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            margin-bottom: 3rem;
            padding: 2rem;
            background: var(--card);
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1);
        }

        .header h1 {
            color: var(--primary);
            font-size: 2.5rem;
            margin-bottom: 1rem;
        }

        .header p {
            color: var(--text-light);
            font-size: 1.1rem;
        }

        .profile-section {
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
            background: var(--card);
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1);
        }

        .profile-image-container {
            position: relative;
            width: 100%;
            aspect-ratio: 1;
            background: var(--background);
            border-radius: 1rem;
            overflow: hidden;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .profile-image-container:hover {
            transform: scale(1.02);
        }

        .profile-image-container span {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 1rem;
            background: rgba(0,0,0,0.7);
            color: white;
            font-size: 0.9rem;
            text-align: center;
        }

        .contact-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .contact-card {
            background: var(--card);
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1);
        }

        .card-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--border);
        }

        .card-header i {
            font-size: 1.5rem;
            color: var(--primary);
        }

        .card-header h2 {
            font-size: 1.5rem;
            color: var(--text);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            font-weight: 500;
            margin-bottom: 0.5rem;
            color: var(--text);
        }

        .input-group {
            display: flex;
            gap: 0.5rem;
        }

        input {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid var(--border);
            border-radius: 0.5rem;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        input:focus {
            outline: none;
            border-color: var(--primary-light);
            box-shadow: 0 0 0 3px rgba(37,99,235,0.1);
        }

        .call-button {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 0.5rem;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            white-space: nowrap;
        }

        .call-button:hover {
            background: var(--primary-light);
            transform: translateY(-1px);
        }

        .emergency-button {
            width: 100%;
            padding: 1.5rem;
            background: var(--danger);
            color: white;
            border: none;
            border-radius: 0.5rem;
            font-size: 1.25rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 2rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 1rem;
        }

        .emergency-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(220,38,38,0.5);
        }

        .save-button {
            width: 100%;
            padding: 1rem;
            background: var(--success);
            color: white;
            border: none;
            border-radius: 0.5rem;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 1rem;
        }

        .save-button:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }

        @media (max-width: 768px) {
            .profile-section {
                grid-template-columns: 1fr;
            }
            
            .profile-image-container {
                max-width: 300px;
                margin: 0 auto;
            }

            .contact-grid {
                grid-template-columns: 1fr;
            }

            body {
                padding: 1rem;
            }
        }

        /* Modern Glass Effect */
        .glass-card {
            backdrop-filter: blur(16px) saturate(180%);
            -webkit-backdrop-filter: blur(16px) saturate(180%);
            background-color: rgba(255, 255, 255, 0.75);
            border: 1px solid rgba(209, 213, 219, 0.3);
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .animate-in {
            animation: fadeIn 0.5s ease-out forwards;
        }

        .warning {
            color: var(--danger);
            font-size: 0.875rem;
            margin-top: 0.5rem;
        }
    </style>
</head>
<body>
    <div class="dashboard">
        <header class="header glass-card animate-in">
            <h1>Emergency Contact</h1>
            <p>Keep your emergency contacts organized and accessible</p>
        </header>

        <div class="contact-grid">
            <div class="contact-card glass-card animate-in">
                <div class="card-header">
                    <i>ðŸ‘ª</i>
                    <h2>Family Contacts</h2>
                </div>
                <h3>Saved Contacts</h3>
                <div class="card mb-3">
                    <%for(let i=0 ; i<allFamilies.length; i++){%>
                        <label><%=allFamilies[i].relation%></label>
                    <div class="input-group">
                        <input type="text" placeholder="Name" value="<%= allFamilies[i].name%>" id="son-name" pattern="[A-Za-z ]+" required>
                        <input type="tel" placeholder="Phone" value="<%= allFamilies[i].phone%>" id="son-phone" maxlength="10" required oninput="validatePhone(this)">
                        <button class="call-button" onclick="makeCall(this)">ðŸ“ž</button>
                        <p id="son-warning" class="warning"></p>
                    </div>
                    <%}%>
                </div><br>
                <hr>
                <h3>Add new Contact</h3>
                <form action="/listings/emergency/new" method="post">
                    <div>
                        <label for="relation">Relation</label>
                        <input type="text" name="relation" id="relation">
                    </div>
                    <div>
                        <label for="name">Name</label>
                        <input type="text" name="name" id="name">
                    </div>
                    <div>
                        <label for="phone">Phone No:</label>
                        <input name="phone" id="phone">   
                    </div>
                    <button class="save-button animate-in">Save All Information</button>
        <button class="emergency-button animate-in" onclick="window.location.href='tel:911'">
            ðŸš¨ EMERGENCY: CALL 911
        </button>
                </form>
    </div>

    <script>
        function validatePhone(input) {
            input.value = input.value.replace(/\D/g, ''); // Remove non-numeric characters
            const warningId = `${input.id}-warning`; // Corrected template literal
            const warningElement = document.getElementById(warningId);
            
            if (input.value.length !== 10) {
                warningElement.textContent = 'Please enter a valid 10-digit phone number';
            } else {
                warningElement.textContent = '';
            }
        }
    
        function makeCall(button) {
            const phoneInput = button.previousElementSibling;
            const phoneNumber = phoneInput.value;
            const warningElement = phoneInput.nextElementSibling;
    
            if (phoneNumber.length === 10 && !isNaN(phoneNumber)) {
                window.location.href = `tel:${phoneNumber}`; // Fixed template literal
            } else {
                warningElement.textContent = 'Please enter a valid 10-digit phone number';
            }
        }
    
        // Add animation classes on load
        document.addEventListener('DOMContentLoaded', function() {
            const elements = document.querySelectorAll('.animate-in');
            elements.forEach((el, index) => {
                el.style.animationDelay = `${index * 0.1}s`; // Fixed template literal
            });
        });
    </script>
    
</body>
</html>